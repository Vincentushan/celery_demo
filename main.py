import time

from celery import group
from app.tasks import get_road


track = [(121.458948, 31.255843), (121.458916, 31.25576),
         (121.458893, 31.255761), (121.45887, 31.255905),
         (121.45907, 31.255816), (121.457421, 31.247575),
         (121.449393, 31.247831), (121.449245, 31.247435),
         (121.452995, 31.243066), (121.453343, 31.243255),
         (121.453365, 31.243201), (121.45313, 31.24321),
         (121.453105, 31.243146), (121.453075, 31.243156),
         (121.453145, 31.2432), (121.453123, 31.243236),
         (121.45306, 31.243161), (121.453063, 31.243116),
         (121.453078, 31.243218), (121.453125, 31.243236),
         (121.453135, 31.243263), (121.453198, 31.243275),
         (121.453035, 31.243413), (121.453048, 31.243393),
         (121.452913, 31.243316), (121.452923, 31.243346),
         (121.452906, 31.24333), (121.45293, 31.243356),
         (121.45292, 31.243351), (121.452923, 31.243335),
         (121.45291, 31.2434), (121.452885, 31.243345),
         (121.452603, 31.243206), (121.45259, 31.243231),
         (121.452623, 31.243308), (121.452621, 31.243308),
         (121.4526, 31.243331), (121.452606, 31.243345),
         (121.45263, 31.243335), (121.452643, 31.24338),
         (121.452605, 31.243358), (121.452585, 31.24337),
         (121.45224, 31.24297), (121.452298, 31.243096),
         (121.452288, 31.243088), (121.452308, 31.243093),
         (121.45231, 31.243091), (121.452311, 31.243098),
         (121.452285, 31.24309), (121.452326, 31.243126),
         (121.452326, 31.243138), (121.452308, 31.243151),
         (121.452293, 31.243146), (121.45235, 31.243175),
         (121.45236, 31.243163), (121.452406, 31.243185),
         (121.45241, 31.243131), (121.452496, 31.243131),
         (121.452463, 31.243096), (121.452513, 31.243065),
         (121.452515, 31.24305), (121.452516, 31.243051),
         (121.452481, 31.243035), (121.452488, 31.243018),
         (121.452343, 31.243076), (121.452433, 31.24306),
         (121.452386, 31.243076), (121.45238, 31.243088),
         (121.452378, 31.243085), (121.452365, 31.243085),
         (121.452363, 31.243101), (121.452373, 31.243096),
         (121.452353, 31.243108), (121.452343, 31.243146),
         (121.452331, 31.243151), (121.452358, 31.243156),
         (121.452338, 31.243165), (121.452413, 31.243161),
         (121.452403, 31.243181), (121.452371, 31.243181),
         (121.452373, 31.243185), (121.452376, 31.243166),
         (121.452371, 31.243163), (121.452368, 31.243173),
         (121.45235, 31.243156), (121.452336, 31.243165),
         (121.452363, 31.243171), (121.45234, 31.243195),
         (121.452331, 31.243265), (121.45234, 31.243261),
         (121.452345, 31.24327), (121.452386, 31.243261),
         (121.452388, 31.24323), (121.452378, 31.243241),
         (121.452401, 31.243245), (121.452413, 31.243205),
         (121.452375, 31.243243), (121.452406, 31.243226),
         (121.452428, 31.243231), (121.452415, 31.243253)]


track = track * 100


def _chunk(it, size):
    block = []
    _it = iter(it)
    while 1:
        try:
            block.append(next(_it))
        except StopIteration:
            if block:
                yield block
            break
        if len(block) == size:
            yield block
            block = []


def test():
    bt = time.time()
    g = group(get_road.s(ps) for ps in _chunk(track, 3))
    res = g()
    p = res.get()
    print(time.time() - bt)
    return p


if __name__ == '__main__':
    test()
